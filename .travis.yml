language: generic

env:
  global:
    - secure: "aCqMPi4dfP9U0KB0SYVSS1NzbYBxcIVvl58YCvL0Xpc/6tUGCY26/8SOk4g9WQJTkA4Nh0bE5WvjL4dWv5JaUVUles1vZCyp1UO4dH9z/2Q9CInhunnc1sqwQnqSAYM+VhbiG71We6pKwPUag1x+veQSaIZPDx/dBbhaPpnUeqwBRLmfuBz9Yzlx/SmIU/yvrxDgyC+1JQnmXyh86YWDAr0Chf4hCM6FA2WIs5d0yfmAXfaQJNIdjlKmxZ+/lLIaAneYOyHjGXyEallBibejtXzC9zGHBieU9sl4Hgh/7dTiE2tVaj1DW5o71mHupBZt1YQGLMBvVWD9DhSu9uEaKLONvY2lnAP5OLsmyv74cksDOlpGSqLd/EzAjNSUKAbDqO5AL/CfB9wL/aJsxONVzUXgCZlMZJacUl+kSWIqbugWwwjlzGCjUzC8SImawDD59XiBwUqKchPUsYFtcbGRUYF4amRN9TldxONDG6sORPQpeDqXTrCrBIIW5e7hOP0MSMOZWrtzJcHw/SwcJLpF99ghdiQBA1IHbgTSc1VOC91Hs3iol3KYuGS9kWBn0BvjJ/9Y3Lptqlo1c+wUYUBDSyDHyWKbonFM4X5FXd84C/umHEHN9kcqdgw0ddewpYDYbihT7160BFVYKaFh7cDDWNGSbPLNK7AGToTftHZrcbk="
    - secure: "DMqsxPRUpWXtdKBxaHY6i48zkaqDh9Ibh81+1k+OZJ9dpwb9yRjl0VmEZuvAV10FRVxpGrqLrlvefPWN8sggtxuYO5k+jISXChUcfHQGOqcEZ4zSbixf7xtIAmA4ljr+4oWctxsYkYcjJ5qmoTD+icL0w3iiBOrm3Jl+VJwW12oISMi/qNumVaJq+brh57moVGZJ+tK8oRm6UOA6Pwtf7Xthw5dzDUwlNHx7TCopFWAnsbNgOUHTJLU+quygqYIp/BhzlqSO7SrnEs9fjWm+RbXqFGD0nw5jUPkOCleQ8U8xwDDWzJ9yuJWiHw8+VD8QjmBBeaoLebDmxV9RG5KcIgqQjoBDbYYun750VOf2Hf+5E7/tfbDyvAfUXy+ZkUPtMrqWcVc/q2VcUEyFfQRcgPPNtMHjJmzP5hZkseixhIQYhwulJCrptu5Lpn4IYau26RqCxgFZ1NPUXEPSnAKk5EzeNcbGlvuHzTt+kj3R2Taw0FWtsgf7gv9KG8MqvHZ461voHtqk3Pv7ikNHV4leS+ljcHCHWwW4QomwMUngHz2PbCz+gCUZYp3zdJb4J+3wZOnwQRnma4uPEtUzQYxWHfDkxJYB0Q3i7Qfajs9LxgZG2lOQyMcnqziUSZj22NZqSqKfFHd3LdslUOFbEDtXGEvqQeJXGfIIaAgD6D9u/+o="
    - secure: "pTyd+LzO6ZMnfTeDyKb3e2oqJi11waZzXhyBKkpsbUEEnrUBWcRh34OL1fMbuLah37syOxZHT0q3wXzV65t07KqWFuH1tjkf+sDPs/MMUdYeVhS/8kPjL/H3rGyVvjzH0ERl1frsVjHmJhgboVeNgi5TMzEwcDRMcMD8X6P00Sjbaavgj9tfSFRKBCFNL4kiGYRreWcRr/na+jxndhAAEtdQrjFF0LonWvXDYKzx2GXoK2x7Z+kfNaMWNgJZvlBMNWR8LZqbV+kCMaPqPqq7tyFVcjmmcmkqLGXkqNJAn67E2e4B4N1TIzHZ511ka+ccOj5ohvdRk5K4ix17doHu8Lhbxz1+uaVC9c8swiT6dR7C19755+9mrvuLHqltAlagSlYAHdlMCeZ48BslOf7D0w9gCTRCwRK9emV+h/2dk/91BgERbyfYJKdzyd2vntHo/jDV4/xFTaK5Aa0PspjjotYU6v8DJIROe+gUbEyuH/AwBrznt6IKAw5y584ukMndzQCMPrEY6iFT5+DcG5UOSQYs9KqKMGHAS2L8N9znk+jdbWV4bVRje4DIeHEyWDpC1xhEq2ZF8loVlXDokVmSUaxxVZ/zlO6DIkwTHymhaI6zXAXhSxryjJEsEWGo0i605koiMzY7P1NqUdxgfPgy7YoHxG7HsbQUr9ASig/CeQI="

matrix:
  include:
    - os: linux
      sudo: required
      services: docker
      env:
        - image=debian:jessie
        - package=pairinteraction-install-linux.deb
      before_deploy: sudo chown travis:travis $TRAVIS_BUILD_DIR/build/$package
    - os: linux
      sudo: required
      services: docker
      env:
        - image=ubuntu:16.04
        - package=
    - os: linux
      sudo: required
      services: docker
      env:
        - image=opensuse:13.2
        - package=pairinteraction-install-linux.rpm
      before_deploy: sudo chown travis:travis $TRAVIS_BUILD_DIR/build/$package
    - os: linux
      sudo: required
      services: docker
      env:
        - image=opensuse:13.2-w64
        - package=pairinteraction-install-windows-x86_64.exe
      before_deploy: sudo chown travis:travis $TRAVIS_BUILD_DIR/build/$package
    - os: osx
      osx_image: xcode8
      env:
        - package=pairinteraction-install-osx.dmg
      before_install:
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh
        - chmod +x miniconda.sh && ./miniconda.sh -b -p /Users/travis/miniconda3 && export PATH=/Users/travis/miniconda3/bin:$PATH
        - conda update --yes conda
      install:
        - conda install --yes nomkl numpy scipy
        - pip install psutil pint pyqt5 git+https://github.com/pyinstaller/pyinstaller
        - brew install eigen gsl llvm
        - npm install -g fileicon
      before_script:
        - export CXX=/usr/local/opt/llvm/bin/clang++
        - export LDFLAGS="-L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib"
    - os: linux
      services: docker
      sudo: required
      env:
        - image=debian:doxygen

script:
  - docker/build_docker.sh

deploy:
  provider: releases
  prerelease: true
  api_key: $GH_TOKEN
  file_glob: true
  file: $TRAVIS_BUILD_DIR/build/$package
  skip_cleanup: true
  #draft: true
  on:
    #all_branches: true
    tags: true
    condition: $package != ""
