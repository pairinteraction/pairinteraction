name: Python Wheel

on:
  push:
  pull_request:
    types: [opened, reopened]
  workflow_call:
  workflow_dispatch:

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  CLICOLOR_FORCE: 1
  VERBOSE: 1

jobs:
  sdist:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v4

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: sdist
        path: dist/*.tar.gz

  wheel:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest # runs in container anyway
        - os: macos-13
        - os: macos-14
        - os: windows-2019
    name: Wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    steps:
    - uses: actions/checkout@v4

    - name: Log in to the Container registry
      if: runner.os == 'Linux'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      uses: ./.github/actions/setup-vcpkg

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: brew install --force-bottle doctest spdlog eigen fmt lapack nlohmann-json cpp-httplib tbb

    - uses: pypa/cibuildwheel@v2.16

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.os }}
        path: wheelhouse/*.whl
