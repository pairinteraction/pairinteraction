name: Python Wheel

on:
  push:
    branches: ["*"]
    tags: ["v*.*.*"]  # and run on tags that describe new versions
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_call:
  workflow_dispatch:

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  CLICOLOR_FORCE: 1
  VERBOSE: 1

jobs:
  sdist:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v5

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: dist-sdist
        path: dist/*.tar.gz

  wheel:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest # runs in container anyway
        - os: windows-2022
        - os: macos-13
        - os: macos-14
    runs-on: ${{ matrix.os }}
    timeout-minutes: 180
    steps:
    - uses: actions/checkout@v5

    - name: Log in to the Container registry
      if: runner.os == 'Linux'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      uses: ./.github/actions/setup-vcpkg

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: brew install --force-bottle spdlog nlohmann-json eigen tbb lapack fmt

    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
        version: "0.7"
        enable-cache: true
        cache-dependency-glob: |
          ./pyproject.toml
          ./.build_requirements.txt

    - uses: pypa/cibuildwheel@v3.2
      env:
        CIBW_SKIP: ${{ !startsWith(github.ref, 'refs/tags/') && 'cp3{9,10,11}*' || '' }}
        MACOSX_DEPLOYMENT_TARGET: ${{ matrix.os == 'macos-13' && '13.0' || '14.0' }}

    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: dist-wheel-${{ matrix.os }}
        path: wheelhouse/*.whl

  test-install-from-sdist:
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-latest  # runs in container anyway
        - os: macos-13
        - os: macos-14
        - os: windows-2022
    name: Test installing sdist on ${{ matrix.os }} ${{ matrix.os == 'ubuntu-latest' && '(with database download and notebooks)' || '' }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    container:
      image: ${{ matrix.os == 'ubuntu-latest' && format('ghcr.io/pairinteraction/pairinteraction-ubuntu:docker') || null }}
    needs: [sdist]
    steps:
    - uses: actions/checkout@v5

    - name: Install Windows dependencies
      if: runner.os == 'Windows'
      uses: ./.github/actions/setup-vcpkg

    - name: Install macOS dependencies
      if: runner.os == 'macOS'
      run: brew install --force-bottle spdlog nlohmann-json eigen tbb lapack fmt

    - name: Setup uv project virtual environment
      uses: ./.github/actions/setup-uv-all-deps

    - name: Download the sdist
      uses: actions/download-artifact@v5
      with:
        name: dist-sdist
        path: dist

    - name: Install the sdist  # Note, the tests dependencies are already automatically installed in setup-uv-all-deps
      shell: bash
      run: uv pip install dist/*.tar.gz

    - name: Run python tests with shipped database
      if: runner.os != 'Linux'
      run: uv run --no-project pytest

    - name: Run all python tests including notebooks with downloaded database
      if: runner.os == 'Linux'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        uv run --no-project pytest --nbmake --download-missing --database-dir="" --verbose -s  # -s for text output to the terminal

  publish-to-testpypi:
    name: Publish to TestPyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to TestPyPI on tag pushes
    needs: [sdist, wheel]
    runs-on: ubuntu-latest
    timeout-minutes: 15

    environment:
      name: testpypi
      url: https://test.pypi.org/p/pairinteraction

    permissions:
      id-token: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v5
      with:
        path: dist
        pattern: dist-*
        merge-multiple: true

    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/
        repository-url: https://test.pypi.org/legacy/
