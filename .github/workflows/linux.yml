name: Linux

on:
  push:
  pull_request:
    types: [opened, reopened]
  workflow_call:
  workflow_dispatch:

# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  CLICOLOR_FORCE: 1
  VERBOSE: 1
  CXXFLAGS: "-march=broadwell"

jobs:
  debian:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout
      run: git config --global --add safe.directory '*'
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pairinteraction/database/
        key: pairinteraction-${{ github.job }}-${{ github.run_id }}
        restore-keys:
          pairinteraction-${{ github.job }}
    - name: Configure
      run: |
        . /opt/intel/oneapi/setvars.sh
        cmake -S . -B build/ -DMKL_THREADING=gnu_thread -DBUILD_TESTING=On -DWITH_COVERAGE=On -DWITH_DOC=On
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
      env:
        QT_QPA_PLATFORM: "offscreen"
        QT_DEBUG_PLUGINS: 1
    - name: Documentation
      run: |
        lcov --directory . --capture --output-file coverage.info;
        lcov --remove coverage.info '/usr/*' '*/build/*' '*/eigen/*' '*/wignerSymbols/*' --output-file coverage.info;
        cmake --build . --target doc -- --keep-going
        genhtml coverage.info --output-directory doc/coverage/html/
      working-directory: build/
    - name: Prepare pages
      run: |
        mkdir -p public/doxygen/ public/sphinx/ public/coverage/ public/dev/bench/
        cp -r build/doc/doxygen/html public/doxygen/
        cp -r build/doc/sphinx/_build/html public/sphinx/
        cp -r build/doc/coverage/html public/coverage/
        # Preserve old benchmark data
        if git cat-file -e origin/gh-pages:dev/bench/data.js; then
            git show origin/gh-pages:dev/bench/data.js > public/dev/bench/data.js
        fi
        if git cat-file -e origin/gh-pages:dev/bench/index.html; then
            git show origin/gh-pages:dev/bench/index.html > public/dev/bench/index.html
        fi
    - name: Deploy pages
      uses: JamesIves/github-pages-deploy-action@v4.5.0
      with:
        branch: gh-pages
        folder: public
        single-commit: true
        dry-run: ${{ !(github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) }}

  ## Can't set permissions on private repo
  #benchmarks:
  #  needs: debian
  #  uses: ./.github/workflows/benchmarks.yml

  manylinux:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-manylinux:docker
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout
      run: git config --global --add safe.directory '*'
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pairinteraction/database/
        key: pairinteraction-${{ github.job }}-${{ github.run_id }}
        restore-keys:
          pairinteraction-${{ github.job }}
    - name: Setup Python
      run: |
        echo "/opt/python/cp38-cp38/bin" >> $GITHUB_PATH
    - name: Install dependencies
      run: pip3 install -r requirements.txt
    - name: Configure
      run: cmake -S . -B build/ -DBLA_VENDOR=OpenBLAS -DBUILD_TESTING=On
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
      env:
        QT_QPA_PLATFORM: "offscreen"
        QT_DEBUG_PLUGINS: 1
    - name: Wheel
      run: |
        python setup.py bdist_wheel --python-tag py3 --plat-name "$AUDITWHEEL_PLAT"
        auditwheel repair dist/*.whl --plat "$AUDITWHEEL_PLAT"
        mkdir -p artifact/
        cp wheelhouse/*.whl artifact/
      working-directory: build/
    - uses: actions/upload-artifact@v3
      with:
        name: pairinteraction-manylinux-wheel
        path: build/artifact/

  opensuse:
    if: false # disabled until OpenSUSE upgrades Python
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-opensuse:docker
    env:
      package: pairinteraction-install-opensuse.rpm
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout
      run: git config --global --add safe.directory '*'
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pairinteraction/database/
        key: pairinteraction-${{ github.job }}-${{ github.run_id }}
        restore-keys:
          pairinteraction-${{ github.job }}
    - name: Configure
      run: cmake -S . -B build/ -DBLA_VENDOR=OpenBLAS -DBUILD_TESTING=On -DWITH_DOC=On -DCPACK_PACKAGE_FILE_NAME="${package}"
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
      env:
        QT_QPA_PLATFORM: "offscreen"
        QT_DEBUG_PLUGINS: 1
    - name: Documentation
      run: cmake --build build/ --target doc -- --keep-going
    - name: Package
      run: cmake --build build/ --target package -- --keep-going
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.package }}
        path: build/${{ env.package }}

  static-analysis:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-static-analysis:docker
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout
      run: git config --global --add safe.directory '*'
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pairinteraction/database/
        key: pairinteraction-${{ github.job }}-${{ github.run_id }}
        restore-keys:
          pairinteraction-${{ github.job }}
    - name: Configure
      run: cmake -S . -B build/ -DBLA_VENDOR=OpenBLAS -DBUILD_TESTING=On -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_CXX_CLANG_TIDY="clang-tidy;-config=" -DWITH_DOC=On -DWITH_GUI=Off
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
      env:
        QT_QPA_PLATFORM: "offscreen"
        QT_DEBUG_PLUGINS: 1
    - name: Documentation
      run: cmake --build build/ --target doc -- --keep-going

  ubuntu:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-ubuntu:docker
    env:
      package: pairinteraction-install-ubuntu.deb
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout
      run: git config --global --add safe.directory '*'
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pairinteraction/database/
        key: pairinteraction-${{ github.job }}-${{ github.run_id }}
        restore-keys:
          pairinteraction-${{ github.job }}
    - name: Configure
      run: cmake -S . -B build/ -DBLA_VENDOR=OpenBLAS -DBUILD_TESTING=On -DWITH_DOC=On -DCPACK_PACKAGE_FILE_NAME="${package}"
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
      env:
        QT_QPA_PLATFORM: "offscreen"
        QT_DEBUG_PLUGINS: 1
    - name: Documentation
      run: cmake --build build/ --target doc -- --keep-going
    - name: Package
      run: cmake --build build/ --target package -- --keep-going
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.package }}
        path: build/${{ env.package }}
