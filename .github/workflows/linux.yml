name: Linux

on:
  push:
  pull_request:
    types: [opened, reopened]
  workflow_call:
  workflow_dispatch:

# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  CLICOLOR_FORCE: 1
  VERBOSE: 1
  CXXFLAGS: "-march=broadwell"

jobs:
  debian:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
    - name: Install Python dependencies for cmake
      run: uv pip install --system --break-system-packages --no-cache-dir nanobind numpy
    - name: Configure
      run: |
        . /opt/intel/oneapi/setvars.sh
        cmake -S . -B build/ -DBUILD_TESTING=On
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going

  manylinux:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-manylinux:docker
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python Path
      run: echo "/opt/python/cp39-cp39/bin" >> $GITHUB_PATH
    - name: Install Python dependencies for cmake
      run: uv pip install --system --break-system-packages --no-cache-dir nanobind numpy
    - name: Configure
      run: cmake -S . -B build/ -DBLA_VENDOR=OpenBLAS -DBUILD_TESTING=On
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
    - uses: actions/upload-artifact@v4
      with:
        name: pairinteraction-manylinux-wheel
        path: build/artifact/

  opensuse:
    if: false # disabled until OpenSUSE upgrades Python
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-opensuse:docker
    env:
      package: pairinteraction-install-opensuse.rpm
    steps:
    - uses: actions/checkout@v4
    - name: Install Python dependencies for cmake
      run: uv pip install --system --break-system-packages --no-cache-dir nanobind numpy
    - name: Configure
      run: cmake -S . -B build/ -DBLA_VENDOR=OpenBLAS -DBUILD_TESTING=On -DCPACK_PACKAGE_FILE_NAME="${package}"
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
    - name: Doxygen Documentation
      run: cmake --build build/ --target doxygen -- --keep-going
    - name: Package
      run: cmake --build build/ --target package -- --keep-going
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.package }}
        path: build/${{ env.package }}

  static-analysis:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-static-analysis:docker
    steps:
    - uses: actions/checkout@v4
    - name: Install Python dependencies for cmake
      run: uv pip install --system --break-system-packages --no-cache-dir nanobind numpy
    - name: Configure
      run: cmake -S . -B build/ -DBLA_VENDOR=OpenBLAS -DBUILD_TESTING=On -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_CXX_CLANG_TIDY="clang-tidy"
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going

  ubuntu:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-ubuntu:docker
    env:
      package: pairinteraction-install-ubuntu.deb
    steps:
    - uses: actions/checkout@v4
    - name: Install Python dependencies for cmake
      run: uv pip install --system --break-system-packages --no-cache-dir nanobind numpy
    - name: Configure
      run: cmake -S . -B build/ -DBLA_VENDOR=OpenBLAS -DBUILD_TESTING=On -DCPACK_PACKAGE_FILE_NAME="${package}"
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
    - name: Doxygen Documentation
      run: cmake --build build/ --target doxygen -- --keep-going
    - name: Package
      run: cmake --build build/ --target package -- --keep-going
    - uses: actions/upload-artifact@v4
      with:
        name: ${{ env.package }}
        path: build/${{ env.package }}
