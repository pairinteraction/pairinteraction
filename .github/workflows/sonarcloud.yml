name: SonarCloud

on:
  push:
    branches:
      - master

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  CLICOLOR_FORCE: 1
  VERBOSE: 1
  QT_QPA_PLATFORM: "offscreen"
  QT_DEBUG_PLUGINS: 1

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y zip gcovr
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2
      - name: Install Python dependencies for cmake
        run: uv pip install --system --break-system-packages --no-cache-dir nanobind numpy
      - name: Configure
        run: cmake -S . -B build/ -DBUILD_TESTING=On -DWITH_COVERAGE=On
      - name: Run build-wrapper
        run: |
          build-wrapper-linux-x86-64 --out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} cmake --build build/ -- --keep-going
      - name: Run tests and generate coverage statistics
        run: |
          cmake --build build/ --target test -- --keep-going
          gcovr --exclude-unreachable-branches --exclude-throw-branches --sonarqube > coverage.xml
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        if: ${{ env.SONAR_TOKEN != '' }}
        run: |
          sonar-scanner \
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}" \
            --define sonar.coverageReportPaths=coverage.xml
