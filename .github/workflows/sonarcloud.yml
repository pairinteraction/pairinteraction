name: SonarCloud

on:
  push:
    branches:
      - master

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  CLICOLOR_FORCE: 1
  VERBOSE: 1

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: ghcr.io/pairinteraction/pairinteraction-debian:docker
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y zip gcovr curl

      - name: Install Build Wrapper
        uses: SonarSource/sonarqube-scan-action/install-build-wrapper@v5.2.0

      - name: Setup uv build virtual environment
        uses: ./.github/actions/setup-uv-build-venv

      - name: Configure project
        run: uv run --no-project cmake -S . -B build/ -DWITH_COVERAGE=On

      - name: Run Build Wrapper with build
        run: |
          build-wrapper-linux-x86-64 --out-dir "${{ env.BUILD_WRAPPER_OUT_DIR }}" cmake --build build/ -- --keep-going

      - name: Run tests and generate coverage report
        run: |
          cmake --build build/ --target test -- --keep-going
          gcovr --exclude-unreachable-branches --exclude-throw-branches --gcov-ignore-parse-errors --sonarqube > coverage.xml

      - name: SonarQube Scan
        if: false # skip since we are using sonarcloud's automatic analysis for now
        uses: SonarSource/sonarqube-scan-action@v5.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            --define sonar.projectKey=pairinteraction_pairinteraction
            --define sonar.organization=pairinteraction
            --define sonar.cfamily.build-wrapper-output="${{ env.BUILD_WRAPPER_OUT_DIR }}"
            --define sonar.coverageReportPaths=coverage.xml
