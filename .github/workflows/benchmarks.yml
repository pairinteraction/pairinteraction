name: Benchmarks

on:
  workflow_call:
  workflow_dispatch:

permissions:
  contents: write
  deployments: write

# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  QT_QPA_PLATFORM: "offscreen"
  QT_DEBUG_PLUGINS: 1

jobs:
  benchmarks:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout
      run: git config --global --add safe.directory '*'
    - name: Configure
      run: |
        . /opt/intel/oneapi/setvars.sh
        cmake -S . -B build/ -DMKL_THREADING=gnu_thread -DBUILD_TESTING=Off -DWITH_BENCH=On
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Benchmark
      run: cmake --build build/ --target bench -- --keep-going
    - name: Collect results
      run: |
        python3 - <<-EOF
        import json
        import pathlib

        benchmarks = []
        for path in pathlib.Path("build/pairinteraction/benchmarks/").glob("*.json"):
            with open(path, "r") as f:
                results = json.load(f)
                benchmarks += results["benchmarks"]

        results["benchmarks"] = benchmarks
        with open("build/pairinteraction/benchmarks/all_benchs.json", "w") as f:
            json.dump(results, f, indent=4)
        EOF
    - name: Check if gh-pages branch exists
      id: check-remote-branch
      run: |
        if git ls-remote --exit-code --heads origin gh-pages; then
            echo "exists=true" >> $GITHUB_OUTPUT
        fi
    - name: Store benchmark result
      if: ${{ steps.check-remote-branch.outputs.exists == 'true' }}
      uses: benchmark-action/github-action-benchmark@v1.19.3
      with:
        name: C++ Benchmark
        tool: 'googlecpp'
        output-file-path: build/pairinteraction/benchmarks/all_benchs.json
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: ${{ github.ref == 'refs/heads/master' }}
        comment-on-alert: false
        fail-on-alert: false
