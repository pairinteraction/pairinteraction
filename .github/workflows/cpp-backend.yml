name: C++ Backend

on:
  push:
  pull_request:
    types: [opened, reopened]
  workflow_call:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false


env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  VERBOSE: 1
  CLICOLOR_FORCE: 1


jobs:
  backend:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        distro: [debian, ubuntu, manylinux, opensuse, static-analysis]
        CXXFLAGS: ["-march=broadwell"]
        TEST_TARGET: ["test"]
        BUILD_ARGS: ["-- --keep-going"]
        include:
          - distro: static-analysis
            EXTRA_CMAKE_ARGS: -DCMAKE_CXX_COMPILER="clang++" -DCMAKE_CXX_CLANG_TIDY="clang-tidy"
          - distro: opensuse
            EXTRA_CMAKE_ARGS: -DCMAKE_CXX_COMPILER="g++-12"
          - os: macos-12
            distro: macos
            EXTRA_CMAKE_ARGS: -DPython_FIND_FRAMEWORK=LAST
            CXXFLAGS:
            TEST_TARGET: "test"
            BUILD_ARGS: "-- --keep-going"
          - os: windows-2019
            distro: windows
            EXTRA_CMAKE_ARGS: -G "Visual Studio 16 2019" -DPython_FIND_REGISTRY=LAST -DCMAKE_BUILD_TYPE=Release
            CXXFLAGS: "/Ox /arch:AVX2"
            TEST_TARGET: "RUN_TESTS"
            BUILD_ARGS: "--config Release"

    name: ${{ matrix.distro }}
    runs-on: ${{ matrix.os }}
    env:
      CXXFLAGS: ${{ matrix.CXXFLAGS }}

    container:
      image: ${{ matrix.os == 'ubuntu-latest' && format('ghcr.io/atom-pairinteraction/pairinteraction-{0}:docker', matrix.distro) || null }}

    steps:
    - uses: actions/checkout@v4

    - name: Install MacOS dependencies
      if: ${{ matrix.distro == 'macos' }}
      run: brew install boost cereal doctest spdlog eigen fmt gsl lapack nlohmann-json cpp-httplib tbb uv graphviz

    - name: Install Windows dependencies
      if: ${{ matrix.distro == 'windows' }}
      uses: ./.github/actions/setup-vcpkg
    - name: Install Windows uv
      if: ${{ matrix.distro == 'windows' }}
      run: powershell -c "irm https://astral.sh/uv/install.ps1 | iex"

    - uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install Python dependencies for cmake
      run: uv pip install --system --break-system-packages --no-cache-dir nanobind numpy

    - name: Install MKL
      if: ${{ matrix.distro != 'macos' }}
      run: uv pip install --system --break-system-packages --no-cache-dir mkl mkl-devel

    - name: Configure
      run: cmake -S . -B build/ -DBUILD_TESTING=On ${{ matrix.EXTRA_CMAKE_ARGS }}

    - name: Build
      run: cmake --build build/ ${{ matrix.BUILD_ARGS }}

    - name: Test
      run: cmake --build build/ --target ${{ matrix.TEST_TARGET }} ${{ matrix.BUILD_ARGS }}

    - name: Run debugging session in tmate
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled && always()
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true
