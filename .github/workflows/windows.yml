name: Windows

on:
  push:
  pull_request:
  workflow_call:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled'
        required: false
        default: false

# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  CLICOLOR_FORCE: 1
  VERBOSE: 1
  CMAKE_BUILD_TYPE: Release
  CXXFLAGS: "/Ox /arch:AVX2"

jobs:
  build:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - uses: actions/cache@v4
        with:
          path: ~\AppData\Local\pairinteraction\database\
          key: pairinteraction-${{ github.job }}-${{ github.run_id }}
          restore-keys:
            pairinteraction-${{ github.job }}

      - name: Install Intel oneAPI Math Kernel Library (oneMKL)
        uses: ./.github/actions/install-intel-mkl

      - name: Install Windows dependencies
        uses: ./.github/actions/setup-vcpkg

      - uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          cache: 'pip'
      - run: pip install -r requirements.txt

      - name: Configure
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          call "C:\Program Files (x86)\Intel\oneAPI\setvars.bat"
          cmake -S . -B build/ -G "Visual Studio 16 2019" -DBUILD_TESTING=On ^
              -DMKL_THREADING=intel_thread ^
              -DPython_FIND_REGISTRY=LAST ^
              -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }}

      - name: Build
        run: cmake --build build/ --config ${{ env.CMAKE_BUILD_TYPE }}

      - name: After build
        run: |
          $RedistVersion = Get-Content "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\Microsoft.VCRedistVersion.default.txt" -TotalCount 1
          Copy-Item -Path "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Redist\MSVC\$($RedistVersion.Trim())\vcredist_x64.exe" -Destination vcredist_x64.exe -Verbose
          cmake --build . --target win32 --config ${{ env.CMAKE_BUILD_TYPE }}
          python setup.py bdist_wheel --python-tag py3 --plat-name win_amd64
          $env:PATH_WHEEL_UNMODIFIED=$(ls dist\*.whl | foreach { $_.FullName })
          wheel unpack $env:PATH_WHEEL_UNMODIFIED -d wheelhouse\
          $env:PATH_WHEEL_UNPACKED=$(ls wheelhouse\* | foreach { $_.FullName })
          Copy-Item pairinteraction_backend_old\Release\* ${env:PATH_WHEEL_UNPACKED}\pairinteraction_backend_old\ -Recurse -Force -Verbose
          Remove-Item â€“path $env:PATH_WHEEL_UNPACKED\*.dist-info\RECORD
          wheel pack $env:PATH_WHEEL_UNPACKED -d wheelhouse\
        working-directory: build/

      - name: Tests
        run: |
          Copy-Item pairinteraction_backend_old\Release\* pairinteraction_backend_old\ -Recurse -Force -Verbose
          New-Item -Path test\pairinteraction_backend_old\cpp\Release\ -ItemType Directory -Force
          Copy-Item pairinteraction_backend_old\Release\* test\pairinteraction_backend_old\cpp\Release\ -Recurse -Force -Verbose
          cmake --build . --target RUN_TESTS --config ${{ env.CMAKE_BUILD_TYPE }}
        working-directory: build/
        env:
          QT_QPA_PLATFORM: "offscreen"
          QT_DEBUG_PLUGINS: 1

      - name: Run debugging session in tmate
        if: github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled && always()
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

      - uses: actions/upload-artifact@v4
        with:
          name: pairinteraction-install-windows.exe
          path: build/pairinteraction-install-windows.exe
      - uses: actions/upload-artifact@v4
        with:
          name: pairinteraction-windows-wheel
          path: build/wheelhouse/*.whl
