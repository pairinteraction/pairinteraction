name: Documentation

on:
  push:
    branches: ["*"]
  pull_request:
    types: [opened, reopened]
  workflow_call:
  workflow_dispatch:

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  CLICOLOR_FORCE: 1
  VERBOSE: 1
  CXXFLAGS: "-march=x86-64-v3"

jobs:
  build_sphinx:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
    - name: Setup uv project virtual environment
      uses: ./.github/actions/setup-uv-all-deps
    - name: Install pairinteraction into virtual environment
      run: uv pip install .[doc]
    - name: Build documentation
      working-directory: docs/
      run: uv run make html
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pairinteraction-docs
        path: docs/_build/html

  build_doxygen:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
    - name: Setup uv build virtual environment
      uses: ./.github/actions/setup-uv-build-venv
    - name: Configure
      run: uv run --no-project cmake -S . -B build/
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Doxygen Documentation
      run: cmake --build build/ --target doxygen -- --keep-going
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pairinteraction-doxygen
        path: build/src/cpp/docs/html

  coverage_cpp_ctest:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
    - name: Setup uv build virtual environment
      uses: ./.github/actions/setup-uv-build-venv
    - name: Configure
      run: uv run --no-project cmake -S . -B build/ -DBUILD_TESTING=On -DWITH_COVERAGE=On
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
    - name: Generate Code Coverage
      run: |
        lcov --directory . --capture --output-file coverage.info;
        lcov --remove coverage.info '/usr/*' '/opt/*' '/tmp/*' '*/_deps/*' --output-file coverage.info;
        genhtml coverage.info --output-directory docs/coverage/
      working-directory: build/
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pairinteraction-coverage-cpp-ctest
        path: build/docs/coverage

  coverage_cpp_pytest:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
    - name: Setup uv project virtual environment
      uses: ./.github/actions/setup-uv-all-deps
    - name: Install pairinteraction into virtual environment
      run: uv pip install -Cbuild-dir=build --config-settings=cmake.define.WITH_COVERAGE=ON .[test]
    - name: Run pytest
      run: uv run pytest
    - name: Generate Code Coverage
      run: |
        lcov --directory . --capture --output-file coverage.info;
        lcov --remove coverage.info '/usr/*' '/opt/*' '/tmp/*' '*/_deps/*' '*/.cache/uv/*' '*/setup-uv-cache/*' --output-file coverage.info;
        genhtml coverage.info --output-directory docs/coverage/
      working-directory: build/
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pairinteraction-coverage-cpp-pytest
        path: build/docs/coverage

  coverage_python_pytest:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
    - name: Setup uv project virtual environment
      uses: ./.github/actions/setup-uv-all-deps
    - name: Install pairinteraction into virtual environment
      run: uv pip install .[test]
    - name: Run pytest with coverage
      run: uv run coverage run -m pytest
    - name: Generate Code Coverage
      run: |
        uv run coverage lcov -o coverage.info
        genhtml coverage.info --output-directory docs/coverage/
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pairinteraction-coverage-python-pytest
        path: docs/coverage

  deploy_docs:
    needs: [build_sphinx, build_doxygen, coverage_cpp_ctest, coverage_cpp_pytest, coverage_python_pytest]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts docs
      uses: actions/download-artifact@v4
      with:
        name: pairinteraction-docs
        path: public/sphinx/html

    - name: Download artifacts doxygen
      uses: actions/download-artifact@v4
      with:
        name: pairinteraction-doxygen
        path: public/doxygen/html

    - name: Download artifacts coverage-cpp-ctest
      uses: actions/download-artifact@v4
      with:
        name: pairinteraction-coverage-cpp-ctest
        path: public/coverage/cpp-ctest/html

    - name: Download artifacts coverage-cpp-pytest
      uses: actions/download-artifact@v4
      with:
        name: pairinteraction-coverage-cpp-pytest
        path: public/coverage/cpp-pytest/html

    - name: Download artifacts coverage-python-pytest
      uses: actions/download-artifact@v4
      with:
        name: pairinteraction-coverage-python-pytest
        path: public/coverage/python-pytest/html

    - name: Deploy pages
      uses: JamesIves/github-pages-deploy-action@v4.7.2
      with:
        branch: gh-pages
        folder: public
        single-commit: true
        dry-run: ${{ !(github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) }}
