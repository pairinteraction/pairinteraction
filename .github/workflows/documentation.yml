name: Documentation

on:
  push:
  pull_request:
    types: [opened, reopened]
  workflow_call:
  workflow_dispatch:

# https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners
env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  CTEST_PARALLEL_LEVEL: 2
  CTEST_OUTPUT_ON_FAILURE: 1
  CLICOLOR_FORCE: 1
  VERBOSE: 1
  CXXFLAGS: "-march=broadwell"

jobs:
  build_docs:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pairinteraction/database/
        key: pairinteraction-${{ github.job }}-${{ github.run_id }}
        restore-keys:
          pairinteraction-${{ github.job }}
    - name: Install pairinteraction
      run: uv pip install --system --break-system-packages --no-cache-dir -v -e .[doc]
    - name: Build documentation
      working-directory: docs/
      run: make html
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pairinteraction-docs
        path: docs/_build/html

  lcov_ctest:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pairinteraction/database/
        key: pairinteraction-${{ github.job }}-${{ github.run_id }}
        restore-keys:
          pairinteraction-${{ github.job }}
    - name: Install Python dependencies
      env:
        NO_COLOR: 1
      run: |
        uv pip compile pyproject.toml --all-extras > requirements.txt
        uv pip install --system --break-system-packages --no-cache-dir -r requirements.txt
    - name: Configure
      run: |
        . /opt/intel/oneapi/setvars.sh
        cmake -S . -B build/ -DBUILD_TESTING=On -DWITH_COVERAGE=On
    - name: Build
      run: cmake --build build/ -- --keep-going
    - name: Test
      run: cmake --build build/ --target test -- --keep-going
    - name: Generate Code Coverage
      run: |
        lcov --directory . --capture --output-file coverage.info;
        lcov --remove coverage.info '/usr/*' '/opt/*' '/tmp/*' '*/_deps/*' --output-file coverage.info;
        genhtml coverage.info --output-directory docs/coverage/
      working-directory: build/
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pairinteraction-lcov-ctest
        path: build/docs/coverage

  lcov_pytest:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - uses: actions/cache@v4
      with:
        path: ~/.cache/pairinteraction/database/
        key: pairinteraction-${{ github.job }}-${{ github.run_id }}
        restore-keys:
          pairinteraction-${{ github.job }}
    - name: Install pairinteraction
      run: uv pip install --system --break-system-packages --no-cache-dir -Cbuild-dir=build --config-settings=cmake.define.WITH_COVERAGE=ON -v -e .[test]
    - name: Run pytest
      run: pytest
      env:
        QT_QPA_PLATFORM: "offscreen"
        QT_DEBUG_PLUGINS: 1
    - name: Generate Code Coverage
      run: |
        lcov --directory . --capture --output-file coverage.info;
        lcov --remove coverage.info '/usr/*' '/opt/*' '/tmp/*' '*/_deps/*' '*/.cache/uv/*' --output-file coverage.info;
        genhtml coverage.info --output-directory docs/coverage/
      working-directory: build/
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pairinteraction-lcov-pytest
        path: build/docs/coverage


  deploy_docs:
    needs: [build_docs, lcov_ctest, lcov_pytest]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/atom-pairinteraction/pairinteraction-debian:docker
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: true
    - name: Fixup Run actions/checkout
      run: git config --global --add safe.directory '*'

    - name: Download artifacts docs
      uses: actions/download-artifact@v4
      with:
        name: pairinteraction-docs
        path: public/sphinx/html
    - name: Download artifacts lcov-ctest
      uses: actions/download-artifact@v4
      with:
        name: pairinteraction-lcov-ctest
        path: public/coverage/ctest/html
    - name: Download artifacts lcov-pytest
      uses: actions/download-artifact@v4
      with:
        name: pairinteraction-lcov-pytest
        path: public/coverage/pytest/html

    - name: Deploy pages
      uses: JamesIves/github-pages-deploy-action@v4.5.0
      with:
        branch: gh-pages
        folder: public
        single-commit: true
        dry-run: ${{ !(github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) }}
