<?xml version="1.0" encoding="UTF-8"?>
<component type="desktop-application">
  <id>org.pairinteraction.Pairinteraction</id>

  <name>pairinteraction</name>
  <summary>A Rydberg Interaction Calculator</summary>

  <url type="homepage">https://www.pairinteraction.org</url>
  <url type="bugtracker">https://github.com/pairinteraction/pairinteraction/issues</url>

  <metadata_license>CC0-1.0</metadata_license>
  <project_license>LGPL-3.0-or-later or GPL-3.0-or-later</project_license>

  <description>
    <p>
      The pairinteraction software calculates properties of Rydberg systems. The software consists of a C++/Python library and a graphical user interface for pair potential calculations. For usage examples visit the tutorials section of the documentation.
    </p>
  </description>

  <launchable type="desktop-id">org.pairinteraction.Pairinteraction.desktop</launchable>
  <screenshots>
    <screenshot type="default">
      <caption>Main window with sample configuration for a pairpotential calculation with two Rb atoms</caption>
      <image>https://www.pairinteraction.org/pairinteraction/sphinx/html/_static/slides/screen-osx-pairpotential.jpg</image>
    </screenshot>
    <screenshot>
      <caption>Stark map for a single Rydberg atom</caption>
      <image>https://www.pairinteraction.org/pairinteraction/sphinx/html/_static/slides/screen-osx-starkmap.jpg</image>
    </screenshot>
    <screenshot>
      <caption>Quadratic Zeeman effect for a single Rydberg atom</caption>
      <image>https://www.pairinteraction.org/pairinteraction/sphinx/html/_static/slides/screen-osx-zeemanmap.jpg</image>
    </screenshot>
  </screenshots>
  <categories>
    <category>Science</category>
  </categories>
  <content_rating type="oars-1.1"/>
  <releases>
    <release version="v0.9.9" date="2023-06-01" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, macOS, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li>NEW! Flatpak: <code>flatpak install org.pairinteraction.Pairinteraction</code></li>
          <li><code>deb</code> package: Ubuntu Focal Fossa (20.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap 15.4 x86_64</li>
          <li>macOS <code>dmg</code>: macOS 11</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 16 2019</li>
        </ul>
        <p>For using pairinteraction as a Python 3 library, we recommend the installation via pip by calling <code>pip install pairinteraction</code> from the command line. Note that it might be necessary to upgrade pip by calling <code>pip install --upgrade pip</code> beforehand.</p>
        <p>Changelog</p>
        <ul>
          <li>Fixed some PyQt bugs in the GUI by @jxm083</li>
          <li>Added a basic test for the GUI</li>
          <li>Replaced Boost.Test with doctest as the unit test framework</li>
          <li>Added workflows for sanitizers and fixed the discovered bugs</li>
          <li>Added a QSplitter to the GUI so that settings panel and plot panel can be resized relative to one another</li>
          <li>Added a pre-commit workflow for coherent code style</li>
          <li>Fixed a sign error in the wavefunctions tutorial by @frederic-hummel</li>
          <li>Fixed deprecated NumPy type errors by @PhilipOsterholz</li>
          <li>Added SonarCloud integration for static code analysis</li>
          <li>Changed the cache path to use the default directory for each OS</li>
          <li>Fixed locale bug that messed up the cache on macOS</li>
          <li>Added a nice gallery for the tutorials using nbsphinx</li>
          <li>Added microarchitecture optimizations to the compiler switches, binaries from CI builds now require a processor with AVX2 (essentially any CPU from 2014 or newer)</li>
          <li>Added support for LAPACK to speed up the diagonalization</li>
          <li>Added support for Intel MKL as a LAPACK provider</li>
          <li>Added support for divide-and-conquer diagonalization for even better performance (up to 10x speedup compared to native Eigen diagonalization)</li>
          <li>Added a new tutorial on how to use the GUI with examples from literature by @SimonHollerith</li>
          <li>Add a splash screen, providing information on the startup of the GUI.</li>
          <li>Add support for new python API to the GUI (to enable, set <code>Misc &gt; Experimental Features &gt; Use new python API as backend</code>)</li>
          <li>With the new python API enabled, the GUI allows calculating pair potentials for strontium.</li>
        </ul>
      </description>
    </release>
    <release version="v0.9.8~alpha" date="2022-09-17" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, macOS, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu Focal Fossa (20.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>macOS <code>dmg</code>: macOS 11</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 16 2019</li>
        </ul>
        <p>For using pairinteraction as a Python 3 library, we recommend the installation via pip by calling <code>pip install pairinteraction</code> from the command line. Note that it might be necessary to upgrade pip by calling <code>pip install --upgrade pip</code> beforehand.</p>
        <p>Changelog</p>
        <ul>
          <li>Implement methods for calculating the interaction between Rydberg atoms and ions by @tripiti.</li>
          <li>Set the default build type to RelWithDebInfo, i.e.Â all our binaries now contain debugging information</li>
          <li>Add Sphinx documentation to prebuilt Linux packages</li>
          <li>Fix diamagnetism</li>
          <li>Make it easier for users to use their own quantum defect database.</li>
          <li>Update quantum defects of strontium to Comput. Phys. Commun. 45, 107814</li>
          <li>Fix perturbative calculation for strontium</li>
          <li>Replace some dependencies on the Boost libraries by functionality available in C++17 and the {fmt} library</li>
          <li>Getting rid of all Git submodules</li>
          <li>Refactoring of our CMake-based build system</li>
          <li>Migrate CI to GitHub Actions and update all dependencies</li>
        </ul>
      </description>
    </release>
    <release version="v0.9.7~alpha" date="2020-07-06" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu bionic (18.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.14</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 2017</li>
        </ul>
        <p>For using pairinteraction as a Python 3 library, we recommend the installation via pip by calling <code>pip install pairinteraction</code> from the command line. Note that it might be necessary to upgrade pip by calling <code>pip install --upgrade pip</code> beforehand.</p>
        <p>Changelog</p>
        <ul>
          <li>Fix crash on Windows which was caused by a missing dependency</li>
          <li>Fix crash which occurred if a symmetry sector did not contain any states</li>
          <li>Implement a method for specifying the two-atom basis explicitly: We can pass a vector containing pairs of indices of one-atom basis vectors to <code>SystemTwo.setOneAtomBasisvectors()</code>. The specified pairs of one-atom basis vectors are then combined to two-atom basis vectors.</li>
        </ul>
      </description>
    </release>
    <release version="v0.9.6~alpha" date="2020-02-05" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu bionic (18.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.14</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 2017</li>
        </ul>
        <p>For using pairinteraction as a Python 3 library, we recommend the installation via pip by calling <code>pip install pairinteraction</code> from the command line.</p>
        <p>Changelog</p>
        <ul>
          <li>Julia interface by @atombear: The pairinteraction software can now be used as a library for the Julia programming language. To obtain the library, compile pairinteraction from source using the <code>-DWITH_JULIA=On</code> cmake configuration switch.</li>
          <li>Fix bug in calculation of radial matrix elements from model potentials which could cause pairinteraction to crash</li>
          <li>Update build environment</li>
        </ul>
      </description>
    </release>
    <release version="v0.9.5~alpha" date="2019-03-12" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu xenial (16.04 LTS), bionic (18.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.12</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 2015</li>
        </ul>
        <p>For using pairinteraction as a Python 3 library, we recommend the installation via pip by calling <code>pip install pairinteraction</code> from the command line.</p>
        <p>Changelog</p>
        <ul>
          <li>The pairinteraction library can now use a Green tensor approach for calculating the interaction between Rydberg atoms which can be enabled by <code>SystemTwo.enableGreenTensor(True)</code>.</li>
          <li>This allows the calculation of pair potentials or van der Waals coefficients in the vicinity of a surface (perfectly conducting plate), see the tutorials <code>pair_potential_near_surface.ipynb</code> and <code>vdw_near_surface.ipynb</code>.</li>
        </ul>
      </description>
    </release>
    <release version="v0.9.4~alpha" date="2019-03-10" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu xenial (16.04 LTS), bionic (18.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.12</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 2015</li>
        </ul>
        <p>For using pairinteraction as a Python 3 library, we recommend the installation via pip by calling <code>pip install pairinteraction</code> from the command line.</p>
        <p>Attention: the pairinteraction library was renamed from <code>libpairinteraction</code> to <code>pairinteraction</code>. The Python tutorials were adapted accordingly.</p>
        <p>Changelog</p>
        <ul>
          <li>The pairinteraction Python 3 library can be installed from PyPI using pip by executing <code>pip install pairinteraction</code> from the command line.</li>
          <li>The pairinteraction library was renamed to <code>pairinteraction</code>. The GUI is now located in the folder <code>pairinteraction_gui</code> and can be started by executing the command<code>start_pairinteraction_gui</code>, if pairinteraction was installed from the command line.</li>
          <li>If pairinteraction is compiled from source and the Intel MKL has been installed, the FEAST eigensolver can be used for fast calculation of parts of the energy spectrum.</li>
        </ul>
      </description>
    </release>
    <release version="v0.9.3~alpha" date="2018-12-17" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu xenial (16.04 LTS), bionic (18.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.12</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 2015</li>
        </ul>
        <p>Please note that we renamed some methods of the Python interface: - <code>State[...].n</code> to <code>State[...].getN()</code> - <code>State[...].l</code> to <code>State[...].getL()</code> - <code>State[...].j</code> to <code>State[...].getJ()</code> - <code>State[...].m</code> to <code>State[...].getM()</code> - <code>State[...].getElement()</code> to <code>State[...].getSpecies()</code> - <code>System[...].getHamiltonianmatrix()</code> to <code>System[...].getHamiltonian()</code> - <code>System[...].getCoefficients()</code> to <code>System[...].getBasisvectors()</code> - <code>System[...].getNumVectors()</code> to <code>System[...].getNumBasisvectors()</code> - <code>System[...].getVectorindex()</code> to <code>System[...].getBasisvectorIndex()</code> - <code>System[...].getStateindex()</code> to <code>System[...].getStateIndex()</code> - <code>System[...].getDiagonal()</code> to <code>System[...].getHamiltonian().diagonal()</code></p>
        <p>Changelog</p>
        <ul>
          <li>Effective Hamiltonians can be calculated perturbatively by the Schrieffer-Wolff transformation.</li>
          <li>Methods like <code>System[...].getStateIndex()</code> or <code>System[...].getOverlap()</code> can be called not only on individual states, but also on lists of states.</li>
          <li>A warning is raised if interatomic distances are smaller than the Le Roy radius.</li>
          <li>The API is now compatible with Python 3.7, also under windows.</li>
          <li>We did several improvements to the code base like adding additional unit tests, fixing style issues, cleaning up the build system, and introducing a consistent nomenclature.</li>
        </ul>
      </description>
    </release>
    <release version="v0.9.2~alpha" date="2018-08-03" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu xenial (16.04 LTS), artful (17.10), bionic (18.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.12</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 2015</li>
        </ul>
        <p>Changelog</p>
        <ul>
          <li>We added an option to the GUI to just save results which are within specific energy limits. This allows to drastically reduce the size of the exported data so that larger basis sets can be used. The option can be found in the configuration tab named âMisc.â.</li>
          <li>With the Python API, Coulomb wave functions (i.e.Â Whittaker functions) can be used as an alternative to Numerovâs method.</li>
          <li>The Python interface and the GUI can optionally be disabled. Then, just the C++ library is build which only requires Sqlite3, GSL, and Boost to be installed.</li>
          <li>The homepage is improved further and some code refactored.</li>
        </ul>
      </description>
    </release>
    <release version="v0.9.1~alpha" date="2018-07-03" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu xenial (16.04 LTS), artful (17.10), bionic (18.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.12</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 2015</li>
        </ul>
        <p>Changelog</p>
        <ul>
          <li>Improve the homepage</li>
          <li>Change the arrangement of the settings within the GUI</li>
          <li>Allow for the calculation of dispersion coefficients in the presence of small magnetic fields</li>
        </ul>
      </description>
    </release>
    <release version="v0.9~alpha" date="2018-06-15" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu xenial (16.04 LTS), artful (17.10), bionic (18.04 LTS) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.12</li>
          <li>Windows <code>exe</code>: Compiled with Visual Studio 2015</li>
        </ul>
        <p>Changelog</p>
        <ul>
          <li>Improve documentation, adding further examples and an introductory tutorial to the pairinteraction Python library</li>
          <li>Improve nomenclature, renaming some methods of the pairinteraction library</li>
          <li>Implement class for fast calculation and storage of matrix elements</li>
          <li>Implement class for calculation of dispersion coefficients</li>
          <li>Fix units in exported files</li>
          <li>Add strontium</li>
        </ul>
      </description>
    </release>
    <release version="v0.8~alpha" date="2017-12-22" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu xenial (16.04 LTS), zesty(17.04), artful(17.10) amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.12</li>
          <li>Windows <code>exe</code>: Windows 7 x86_64, tested with Windows 10</li>
        </ul>
        <p>Changelog</p>
        <ul>
          <li>Simplify installation of the pairinteraction Python library</li>
          <li>Add additional tutorial and improve existing tutorial</li>
          <li>Provide example scripts</li>
          <li>Speed up program with in-memory cache for quantum defects</li>
          <li>Windows: Fix multiprocessing issue, check if VCRedist already installed</li>
          <li>OS X: Fix incompatibility of the pairinteraction library with latest Conda version</li>
          <li>Ubuntu: Build packages for more platforms</li>
        </ul>
      </description>
    </release>
    <release version="v0.7~alpha" date="2017-11-14" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures:</p>
        <ul>
          <li><code>deb</code> package: Ubuntu 16.04 LTS amd64</li>
          <li><code>rpm</code> package: OpenSUSE Leap x86_64</li>
          <li>Mac OS X <code>dmg</code>: Mac OS X 10.11</li>
          <li>Windows <code>exe</code>: Windows 7 x86_64, tested with Windows 10</li>
        </ul>
        <p>Changelog</p>
        <ul>
          <li>Python and C++ interface</li>
          <li>Native Windows build using AppVeyor</li>
          <li>Make Windows installer offline</li>
          <li>Integration and several unit tests</li>
          <li>Measuring of code coverage</li>
          <li>Start documenting the Python interface with Sphinx</li>
        </ul>
        <p>Notes on the Python and C++ Interface</p>
        <p>The C++ library is contained in the folder <em>libpairinteraction</em> inside the installation directory. For the installation of the Python library, see the documentation. We compiled a usage example. Further example applications are going to come. As the Python and C++ interface is still under heavy development, the interface architecture could change. If you notice any problems with the interfaces, please open a new issue or mail the developers.</p>
      </description>
    </release>
    <release version="v0.6~alpha" date="2017-05-28" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures: - <code>deb</code> package: Debian 9 Stretch amd64 - <code>rpm</code> package: OpenSUSE Leap x86_64 - Mac OS X <code>dmg</code>: Mac OS X 10.11 - Windows <code>exe</code>: Cross compiled under OpenSUSE Leap 42.2, tested with Windows 10</p>
        <p>Changelog</p>
        <ul>
          <li>Fix sign of radial matrix elements</li>
          <li>Remove old settings and cache files</li>
        </ul>
      </description>
    </release>
    <release version="v0.5~alpha" date="2017-05-10" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures: - <code>deb</code> package: Debian 9 Stretch amd64 - <code>rpm</code> package: OpenSUSE Leap x86_64 - Mac OS X <code>dmg</code>: Mac OS X 10.11 - Windows <code>exe</code>: Cross compiled under OpenSUSE Leap 42.2, tested with Windows 10</p>
        <p>Changelog</p>
        <ul>
          <li>Add new quantum defects for caesium</li>
          <li>In Windows, prevent Command Prompt from closing</li>
          <li>Fix issue #57 for Windows 10</li>
          <li>Build releases with updated operating systems</li>
        </ul>
      </description>
    </release>
    <release version="v0.4~alpha" date="2017-04-02" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures: - <code>deb</code> package: Debian 8 Jessie amd64 - <code>rpm</code> package: OpenSUSE 13.2 x86_64 - Mac OS X <code>dmg</code>: Mac OS X 10.11 - Windows <code>exe</code>: Cross compiled under OpenSUSE 13.2, tested with Windows 7 and 10</p>
        <p>Changelog</p>
        <ul>
          <li>Fix versioning of deb and rpm packages</li>
          <li>Fix error saving data #52</li>
          <li>Add âreport an error buttonâ to the GUI</li>
          <li>Enhance build system</li>
          <li>Start documenting the code with doxygen</li>
        </ul>
      </description>
    </release>
    <release version="v0.3~alpha" date="2017-01-25" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures: - <code>deb</code> package: Debian 8 Jessie amd64 - <code>rpm</code> package: OpenSUSE 13.2 x86_64 - Mac OS X <code>dmg</code>: Mac OS X 10.11 - Windows <code>exe</code>: Cross compiled under OpenSUSE 13.2, tested with Windows 7</p>
        <p>Changelog</p>
        <ul>
          <li>Greatly improve handling of symmetries</li>
        </ul>
      </description>
    </release>
    <release version="v0.2~alpha" date="2017-01-13" type="stable">
      <description>
        <p>Release Notes</p>
        <p>Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures: - <code>deb</code> package: Debian 8 Jessie amd64 - <code>rpm</code> package: OpenSUSE 13.2 x86_64 - Mac OS X <code>dmg</code>: Mac OS X 10.11 - Windows <code>exe</code>: Cross compiled under OpenSUSE 13.2, tested with Windows 7</p>
        <p>Changelog</p>
        <ul>
          <li>Switch to OpenMP (Open MPI is not required anymore!)</li>
          <li>Reduce memory consumption</li>
          <li>Improve Windows installer</li>
        </ul>
      </description>
    </release>
    <release version="v0.1~alpha" date="2016-12-26" type="stable">
      <description>
        <p>Release Notes</p>
        <p>This is the initial release of pairinteraction to the public. Builds are available for GNU/Linux, Mac OS X, and Windows. The different packages were built on the following architectures: - <code>deb</code> package: Debian 8 Jessie amd64 - <code>rpm</code> package: OpenSUSE 13.2 x86_64 - Mac OS X <code>dmg</code>: Mac OS X 10.11 - Windows <code>exe</code>: Cross compiled under OpenSUSE 13.2, tested with Windows 7</p>
        <p>On Mac OS X, it is required to manually install Open MPI (e.g.Â via âbrew install openmpiâ).</p>
      </description>
    </release>
  </releases>
</component>
