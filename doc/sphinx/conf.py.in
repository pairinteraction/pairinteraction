#
# pairinteraction documentation build configuration file, created by
# sphinx-quickstart on Sat Oct 28 15:41:13 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.
# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

sys.path.insert(0, "@CMAKE_BINARY_DIR@")

repo_slug = os.getenv("GITHUB_REPOSITORY", "pairinteraction/pairinteraction")
user, repo = repo_slug.split("/")

if repo_slug == "pairinteraction/pairinteraction":
    pypi_image = "https://img.shields.io/pypi/v/pairinteraction.svg?color=orange"
    pypi_target = "https://pypi.org/project/pairinteraction/"
else:
    pypi_image = "https://img.shields.io/badge/pypi-TestPyPI-orange.svg?style=flat"
    pypi_target = "https://test.pypi.org/project/pairinteraction/"

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinxcontrib.mermaid",
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.mathjax",
    "sphinx.ext.viewcode",
    "sphinx.ext.napoleon",
    "sphinx.ext.extlinks",
    "nbsphinx",
    #"sphinxcontrib.autodoc_pydantic",
    "sphinx.ext.graphviz",
    "sphinx.ext.inheritance_diagram",
]

html_js_files = [
    (
        "https://cdnjs.cloudflare.com/ajax/libs/mermaid/10.7.0/mermaid.min.js",
        {
            "integrity": "sha512-3j181LWtFFhf1Y8tix6sEqRuN4e9p6V8dH6J6O/bGh5mPk82EA0Y88UZtmlh9awZnhPQqOeB1ogq/NzExIqwKw==",
            "crossorigin": "anonymous",
            "referrerpolicy": "no-referrer",
        },
    )
]
html_css_files = ["gallery.css"]

# Disable cell numbers in jupyter notebooks and show link to ipynb file
nbsphinx_prolog = """
{% set docname = env.doc2path(env.docname, base=None).split("/")[-1] %}

.. raw:: html

    <style>
        .nbinput .prompt,
        .nboutput .prompt {
            display: none;
        }
    </style>

    <div class="admonition note">
      This page was generated from the Jupyter notebook
      <a class="reference external" href="{{ docname|e }}">{{ docname|e }}</a>.
    </div>
"""

# We want to use the version from cdnjs
mermaid_version = ""

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = ".rst"

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "pairinteraction"
copyright = "2017, Sebastian Weber, Henri Menke"
author = "Sebastian Weber, Henri Menke"

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = "@VERSION_WITHOUT_LEADING_V@"
# The full version, including alpha/beta/rc tags.
release = "@VERSION_WITHOUT_LEADING_V@"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["_build", "_doctrees", "Thumbs.db", ".DS_Store"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"
html_logo = "_static/logo48x48.png"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]


# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "pairinteractiondoc"


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, "pairinteraction.tex", "pairinteraction Documentation", "Sebastian Weber, Henri Menke", "manual"),
]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "pairinteraction", "pairinteraction Documentation", [author], 1)]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "pairinteraction",
        "pairinteraction Documentation",
        author,
        "pairinteraction",
        "One line description of project.",
        "Miscellaneous",
    ),
]

# Use constructor docstring as class docstring
autoclass_content = "init"

extlinks = {
    "github": (f"https://github.com/{repo_slug}/%s", None),
}

rst_epilog = """
.. |linux| image:: https://github.com/{repo_slug}/actions/workflows/linux.yml/badge.svg
           :target: https://github.com/{repo_slug}/actions/workflows/linux.yml
           :alt: Linux
.. |windows| image:: https://github.com/{repo_slug}/actions/workflows/windows.yml/badge.svg
             :target: https://github.com/{repo_slug}/actions/workflows/windows.yml
             :alt: Windows
.. |macos| image:: https://github.com/{repo_slug}/actions/workflows/macos.yml/badge.svg
           :target: https://github.com/{repo_slug}/actions/workflows/macos.yml
           :alt: macOS
.. |codecov| image:: https://img.shields.io/badge/code-coverage-blue.svg?style=flat
             :target: https://{user}.github.io/{repo}/coverage/html/index.html
             :alt: Code Coverage Report
.. |benchs| image:: https://img.shields.io/badge/code-benchmarks-blue.svg?style=flat
            :target: https://{user}.github.io/{repo}/dev/bench/index.html
            :alt: Continuous Benchmarking
.. |pypi| image:: {pypi_image}
          :target: {pypi_target}
          :alt: PyPI Package
.. |arxiv| image:: /images/arXiv-badge.svg
           :target: https://arxiv.org/abs/1612.08053
           :alt: arXiv:1612.08053
.. |license| image:: /images/license-badge.svg
             :target: https://www.gnu.org/licenses/gpl-3.0.html
             :alt: License
""".format(
    repo_slug=repo_slug, user=user, repo=repo, pypi_image=pypi_image, pypi_target=pypi_target
)


# -- Options for autosummary, autodoc and pautodoc_pydantic ----------------------------------------------
autodoc_default_options = {
    "private-members": False,
    "inherited-members": False,
    "imported-members": False,
}
autosummary_imported_members = False

autodoc_pydantic_model_show_config_summary = False
autodoc_pydantic_model_show_validator_summary = False
autodoc_pydantic_model_show_validator_members = True
autodoc_pydantic_field_list_validators = True
autodoc_pydantic_model_summary_list_order = "bysource"
autodoc_pydantic_model_member_order = "bysource"
autodoc_pydantic_model_erdantic_figure = True
