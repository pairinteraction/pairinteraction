[build-system]
requires = [  # keep this in sync with .build_requirements.txt
  "scikit-build-core >=0.9.0",
  "nanobind >=1.9.0",
  "typing_extensions >= 4.7", # required by nanobind/stubgen.py
  "numpy >= 1.24", # required by the cpp backend
  "tbb-devel == 2022.0; sys_platform != 'darwin'", # required by the cpp backend
  "mkl-devel == 2025.0; sys_platform != 'darwin'", # required by the cpp backend
]
build-backend = "scikit_build_core.build"

[project]
name = "pairinteraction"
dynamic = ["version"]
description = "A Rydberg Interaction Calculator"
readme = "README.md"
keywords = ["rydberg", "atom interactions", "pair potentials", "mqdt", "quantum physics"]
authors = [
    { name = "Pairinteraction Developers" },
]
maintainers = [
    { name = "Sebastian Weber", email = "seweber@posteo.de" },
    { name = "Henri Menke", email = "henri@henrimenke.de" },
    { name = "Johannes MÃ¶gerle", email = "johannes.moegerle@itp3.uni-stuttgart.de" },
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: C++",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Physics",
  "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
  "typing_extensions >= 4.7",
  "numpy >= 1.24",
  "scipy >= 1.10",
  "pint >= 0.21.1",
]

[project.optional-dependencies]
gui = [
  "pyqt5 >= 5.15.8",
  "pyqtgraph >= 0.13",
]
doc = [
  "sphinx >= 7",
  "sphinx-rtd-theme >= 2.0",
  "nbsphinx >= 0.9",
  "nbconvert >= 7.8",
  "jupyter >= 1.1",
  "sphinx_autodoc_typehints >= 1.24",
  "sphinx-autobuild >= 2021.3",
]
test = [
  "pytest >= 8.0",
  "pytest-env >= 1.1.5",
  "pytest-qt >= 4.2",
  "nbmake >= 1.3",
  "pairinteraction[gui]",
  "coverage >= 7.2",
  "duckdb >= 1.1.3",
  "sympy >= 1.13.3",
]
mkl = [
  "mkl == 2025.0",
]

[dependency-groups]
dev = ["pairinteraction[doc,test]"]

[project.urls]
Homepage = "https://www.pairinteraction.org"
Repository = "https://github.com/pairinteraction/pairinteraction"

[project.scripts]
start_pairinteraction_gui = "pairinteraction.gui.start_pairinteraction_gui:main"

[tool.scikit-build]
cmake.build-type = "RelWithDebInfo"
wheel.py-api = "cp312"  # Build stable ABI wheels for CPython 3.12+
wheel.packages = [
  "src/pairinteraction",
]
wheel.license-files = ["LICENSE-*.txt"]
sdist.include = ["*.pyi"]  # HACK: Include stub files (needed for macos cross compilation)
sdist.exclude = [
  "/tools/",
  "/tests/",
  "/docs/",
  "/data/",
  ".git*",
  ".clang*",
  ".pre-commit-config.yaml",
  ".cmake-format.json",
  ".build_requirements.txt",
]

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "src/cpp/include/pairinteraction/version.hpp"
regex = '''(?sx)
VERSION_MAJOR \s* =? \s* (?P<major>\d+) .*?
VERSION_MINOR \s* =? \s* (?P<minor>\d+) .*?
VERSION_PATCH \s* =? \s* (?P<patch>\d+)
'''
result = "{major}.{minor}.{patch}"

[tool.cibuildwheel]
build = [  # for python >= 3.12 only one stable abi wheel is built, which is then tested against all specified python versions
  "cp3{9,10,11,12,13}-manylinux_x86_64",
  "cp3{9,10,11,12,13}-win_amd64",
  "cp3{9,10,11,12,13}-macosx_x86_64",
  "cp3{9,10,11,12,13}-macosx_arm64",
]
build-frontend = "build[uv]"
build-verbosity = 1
test-extras = ["test"]
test-requires = ["check-wheel-contents>=0.6"]
test-command = [
  "cd {project}",
  "pytest",
  "check-wheel-contents {wheel}",
]

[[tool.cibuildwheel.overrides]]  # linux overrides
select = "*-????linux_*"
manylinux-x86_64-image = "ghcr.io/atom-pairinteraction/pairinteraction-manylinux:docker"
config-settings."cmake.define.FETCHCONTENT_SOURCE_DIR_DUCKDB" = "/opt/duckdb"
inherit.environment = "append"
environment.CXXFLAGS = "-march=x86-64-v3"

[[tool.cibuildwheel.overrides]]  # macosx overrides
select = "*-macosx_*"
inherit.environment = "append"
environment.MACOSX_DEPLOYMENT_TARGET = "13.0"

[[tool.cibuildwheel.overrides]]  # windows overrides
select = "*-win_*"
before-all = "pip install delvewheel" # build-system.requires is unavailable in the build venv
repair-wheel-command = "delvewheel repair --ignore-in-wheel -w {dest_dir} {wheel}"
inherit.environment = "append"
environment.CXXFLAGS = "/Ox /arch:AVX2"
inherit.test-command = "prepend"
test-command = [
  "cd /d {project}",  # /d is required for windows to change the drive, the second cd then does effectively nothing
]

[tool.check-wheel-contents]
ignore = [
  "W004",  # check-wheel-contents does not like some .so files inside pairinteraction.libs
  "W201",  # for macos there is no pairinteraction.libs folder
  "W010",  # for windows the pairinteraction.libs folder might not contain a python module
]
toplevel = ["pairinteraction", "pairinteraction.libs"]

[tool.pytest.ini_options]
testpaths = [
  "tests",
  "docs/examples_python",
]
addopts = [
    "--import-mode=importlib",
    "--nbmake",
]
env = [
    "QT_QPA_PLATFORM=offscreen",
    "QT_DEBUG_PLUGINS=1",
]

[tool.sonar]
projectKey = "pairinteraction_pairinteraction"
organization = "pairinteraction"
python.version = 3
sources = ["src"]

[tool.ruff]
line-length = 120
target-version = "py39"
extend-include = ["*.ipynb"]
lint.select = ["F", "E", "B", "C", "W", "I", "UP", "TID25"]
lint.extend-ignore = ["E741", "C901", "B905"]
lint.per-file-ignores = {"src/pairinteraction/gui/app.py" = ["E402"]}
lint.flake8-tidy-imports.ban-relative-imports = "all"

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true
